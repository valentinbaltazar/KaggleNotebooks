{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "69e4caa5",
   "metadata": {
    "papermill": {
     "duration": 0.005012,
     "end_time": "2024-09-30T01:34:02.291619",
     "exception": false,
     "start_time": "2024-09-30T01:34:02.286607",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Load Datset & Sequence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "10585dfc",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-30T01:34:02.302351Z",
     "iopub.status.busy": "2024-09-30T01:34:02.301840Z",
     "iopub.status.idle": "2024-09-30T01:34:07.881679Z",
     "shell.execute_reply": "2024-09-30T01:34:07.880255Z"
    },
    "papermill": {
     "duration": 5.588989,
     "end_time": "2024-09-30T01:34:07.885172",
     "exception": false,
     "start_time": "2024-09-30T01:34:02.296183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>white_username</th>\n",
       "      <th>black_username</th>\n",
       "      <th>white_id</th>\n",
       "      <th>black_id</th>\n",
       "      <th>white_rating</th>\n",
       "      <th>black_rating</th>\n",
       "      <th>white_result</th>\n",
       "      <th>black_result</th>\n",
       "      <th>time_class</th>\n",
       "      <th>time_control</th>\n",
       "      <th>rules</th>\n",
       "      <th>rated</th>\n",
       "      <th>fen</th>\n",
       "      <th>pgn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>miniman2804</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/miniman2804</td>\n",
       "      <td>1708</td>\n",
       "      <td>1608</td>\n",
       "      <td>win</td>\n",
       "      <td>checkmated</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/259200</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>r2r4/p2p1p1p/b6R/n1p1kp2/2P2P2/3BP3/PP5P/4K2R ...</td>\n",
       "      <td>[Event \"Enjoyable games 2 - Round 1\"]\\n[Site \"...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>koltcho69</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/koltcho69</td>\n",
       "      <td>1726</td>\n",
       "      <td>1577</td>\n",
       "      <td>win</td>\n",
       "      <td>resigned</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>8/5Q1k/4n1pp/8/7P/2N2b2/PP3P2/5K2 b - - 1 33</td>\n",
       "      <td>[Event \"Rapid Rats - Board 5\"]\\n[Site \"Chess.c...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>enhmandah</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/enhmandah</td>\n",
       "      <td>1727</td>\n",
       "      <td>842</td>\n",
       "      <td>win</td>\n",
       "      <td>resigned</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>rn1q1b1r/kb2p1pp/2p5/p1Q5/N1BP2n1/4PN2/1P3PPP/...</td>\n",
       "      <td>[Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>enhmandah</td>\n",
       "      <td>-Amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/enhmandah</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>819</td>\n",
       "      <td>1727</td>\n",
       "      <td>checkmated</td>\n",
       "      <td>win</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>r3kb1r/pp3ppp/3p1n2/2pKp3/P3P3/1P6/4qP1P/QNB5 ...</td>\n",
       "      <td>[Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>Shalllow-Blue</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/shalllow-blue</td>\n",
       "      <td>1729</td>\n",
       "      <td>1116</td>\n",
       "      <td>win</td>\n",
       "      <td>resigned</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>r3b2r/pp6/2pPpR1k/4n3/2P3Q1/3B4/PP4PP/R5K1 b -...</td>\n",
       "      <td>[Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  white_username black_username                                    white_id  \\\n",
       "0         -Amos-    miniman2804     https://api.chess.com/pub/player/-amos-   \n",
       "1         -Amos-      koltcho69     https://api.chess.com/pub/player/-amos-   \n",
       "2         -Amos-      enhmandah     https://api.chess.com/pub/player/-amos-   \n",
       "3      enhmandah         -Amos-  https://api.chess.com/pub/player/enhmandah   \n",
       "4         -Amos-  Shalllow-Blue     https://api.chess.com/pub/player/-amos-   \n",
       "\n",
       "                                         black_id  white_rating  black_rating  \\\n",
       "0    https://api.chess.com/pub/player/miniman2804          1708          1608   \n",
       "1      https://api.chess.com/pub/player/koltcho69          1726          1577   \n",
       "2      https://api.chess.com/pub/player/enhmandah          1727           842   \n",
       "3         https://api.chess.com/pub/player/-amos-           819          1727   \n",
       "4  https://api.chess.com/pub/player/shalllow-blue          1729          1116   \n",
       "\n",
       "  white_result black_result time_class time_control  rules  rated  \\\n",
       "0          win   checkmated      daily     1/259200  chess   True   \n",
       "1          win     resigned      daily     1/172800  chess   True   \n",
       "2          win     resigned      daily     1/172800  chess   True   \n",
       "3   checkmated          win      daily     1/172800  chess   True   \n",
       "4          win     resigned      daily     1/172800  chess   True   \n",
       "\n",
       "                                                 fen  \\\n",
       "0  r2r4/p2p1p1p/b6R/n1p1kp2/2P2P2/3BP3/PP5P/4K2R ...   \n",
       "1       8/5Q1k/4n1pp/8/7P/2N2b2/PP3P2/5K2 b - - 1 33   \n",
       "2  rn1q1b1r/kb2p1pp/2p5/p1Q5/N1BP2n1/4PN2/1P3PPP/...   \n",
       "3  r3kb1r/pp3ppp/3p1n2/2pKp3/P3P3/1P6/4qP1P/QNB5 ...   \n",
       "4  r3b2r/pp6/2pPpR1k/4n3/2P3Q1/3B4/PP4PP/R5K1 b -...   \n",
       "\n",
       "                                                 pgn  \n",
       "0  [Event \"Enjoyable games 2 - Round 1\"]\\n[Site \"...  \n",
       "1  [Event \"Rapid Rats - Board 5\"]\\n[Site \"Chess.c...  \n",
       "2  [Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...  \n",
       "3  [Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...  \n",
       "4  [Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "df = pd.read_csv(\"/kaggle/input/chesscom-user-games-60000-games/club_games_data.csv\")\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4aa64eb2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:34:07.902205Z",
     "iopub.status.busy": "2024-09-30T01:34:07.901648Z",
     "iopub.status.idle": "2024-09-30T01:34:21.549113Z",
     "shell.execute_reply": "2024-09-30T01:34:21.547711Z"
    },
    "papermill": {
     "duration": 13.659641,
     "end_time": "2024-09-30T01:34:21.552147",
     "exception": false,
     "start_time": "2024-09-30T01:34:07.892506",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Chess module\n",
    "!pip install -q chess\n",
    "\n",
    "# Language Generator\n",
    "import chess\n",
    "import chess.pgn\n",
    "import io"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "53d36609",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:34:21.564610Z",
     "iopub.status.busy": "2024-09-30T01:34:21.563563Z",
     "iopub.status.idle": "2024-09-30T01:34:21.578534Z",
     "shell.execute_reply": "2024-09-30T01:34:21.577394Z"
    },
    "papermill": {
     "duration": 0.024395,
     "end_time": "2024-09-30T01:34:21.581546",
     "exception": false,
     "start_time": "2024-09-30T01:34:21.557151",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PGN:\n",
      "\n",
      "[Event \"Enjoyable games 2 - Round 1\"]\n",
      "[Site \"Chess.com\"]\n",
      "[Date \"2013.01.30\"]\n",
      "[Round \"-\"]\n",
      "[White \"-Amos-\"]\n",
      "[Black \"miniman2804\"]\n",
      "[Result \"1-0\"]\n",
      "[Tournament \"https://www.chess.com/tournament/enjoyable-games-2\"]\n",
      "[CurrentPosition \"r2r4/p2p1p1p/b6R/n1p1kp2/2P2P2/3BP3/PP5P/4K2R b K f3 1 22\"]\n",
      "[Timezone \"UTC\"]\n",
      "[ECO \"E22\"]\n",
      "[ECOUrl \"https://www.chess.com/openings/Nimzo-Indian-Defense-Spielmann-Variation\"]\n",
      "[UTCDate \"2013.01.30\"]\n",
      "[UTCTime \"16:35:14\"]\n",
      "[WhiteElo \"1708\"]\n",
      "[BlackElo \"1608\"]\n",
      "[TimeControl \"1/259200\"]\n",
      "[Termination \"-Amos- won by checkmate\"]\n",
      "[StartTime \"16:35:14\"]\n",
      "[EndDate \"2013.02.01\"]\n",
      "[EndTime \"18:14:48\"]\n",
      "[Link \"https://www.chess.com/game/daily/64629816\"]\n",
      "\n",
      "1. d4 Nf6 2. c4 e6 3. Nc3 Bb4 4. Qb3 Bxc3+ 5. Qxc3 O-O 6. Bg5 c5 7. dxc5 Nc6 8. Nf3 Qa5 9. Bxf6 gxf6 10. Qxa5 Nxa5 11. e3 Rd8 12. Rd1 Kg7 13. Be2 b6 14. Rd4 bxc5 15. Rg4+ Kh6 16. Bd3 f5 17. Rh4+ Kg6 18. g4 Ba6 19. gxf5+ exf5 20. Ne5+ Kf6 21. Rh6+ Kxe5 22. f4# 1-0\n",
      "\n",
      "('d4', 'Nf6', 'c4', 'e6', 'Nc3', 'Bb4', 'Qb3', 'Bxc3+', 'Qxc3', 'O-O', 'Bg5', 'c5', 'dxc5', 'Nc6', 'Nf3', 'Qa5', 'Bxf6', 'gxf6', 'Qxa5', 'Nxa5', 'e3', 'Rd8', 'Rd1', 'Kg7', 'Be2', 'b6', 'Rd4', 'bxc5', 'Rg4+', 'Kh6', 'Bd3', 'f5', 'Rh4+', 'Kg6', 'g4', 'Ba6', 'gxf5+', 'exf5', 'Ne5+', 'Kf6', 'Rh6+', 'Kxe5', 'f4#')\n"
     ]
    }
   ],
   "source": [
    "# Parse pgn to move list\n",
    "def moves_from_pgn(pgn_string):\n",
    "    # Parse the PGN string using a StringIO object\n",
    "    pgn = io.StringIO(pgn_string)\n",
    "    game = chess.pgn.read_game(pgn)\n",
    "\n",
    "    board = game.board()\n",
    "    standard_board = chess.Board()\n",
    "    \n",
    "#     print(board.fen())\n",
    "#     print(standard_board.fen())\n",
    "    \n",
    "    if board.fen() != standard_board.fen(): # Exclude custom games and formats\n",
    "        return None\n",
    "    else:\n",
    "        moves = []\n",
    "\n",
    "        for move in game.mainline_moves():\n",
    "            moves.append(board.san(move))\n",
    "            board.push(move)  # Make the move on the board\n",
    "\n",
    "        return None if len(moves)<1 else tuple(moves) # Some PGN have blank move sets\n",
    "\n",
    "test_pgn = df['pgn'][0]\n",
    "print(\"PGN:\\n\")\n",
    "print(test_pgn)\n",
    "print(moves_from_pgn(test_pgn))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "29bfa313",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:34:21.593539Z",
     "iopub.status.busy": "2024-09-30T01:34:21.592843Z",
     "iopub.status.idle": "2024-09-30T01:41:51.909266Z",
     "shell.execute_reply": "2024-09-30T01:41:51.907910Z"
    },
    "papermill": {
     "duration": 450.325805,
     "end_time": "2024-09-30T01:41:51.912299",
     "exception": false,
     "start_time": "2024-09-30T01:34:21.586494",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['move_seq'] = df['pgn'].map(moves_from_pgn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f8cf2b25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:51.924059Z",
     "iopub.status.busy": "2024-09-30T01:41:51.923626Z",
     "iopub.status.idle": "2024-09-30T01:41:51.945100Z",
     "shell.execute_reply": "2024-09-30T01:41:51.943988Z"
    },
    "papermill": {
     "duration": 0.029824,
     "end_time": "2024-09-30T01:41:51.947218",
     "exception": false,
     "start_time": "2024-09-30T01:41:51.917394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>white_username</th>\n",
       "      <th>black_username</th>\n",
       "      <th>white_id</th>\n",
       "      <th>black_id</th>\n",
       "      <th>white_rating</th>\n",
       "      <th>black_rating</th>\n",
       "      <th>white_result</th>\n",
       "      <th>black_result</th>\n",
       "      <th>time_class</th>\n",
       "      <th>time_control</th>\n",
       "      <th>rules</th>\n",
       "      <th>rated</th>\n",
       "      <th>fen</th>\n",
       "      <th>pgn</th>\n",
       "      <th>move_seq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>miniman2804</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/miniman2804</td>\n",
       "      <td>1708</td>\n",
       "      <td>1608</td>\n",
       "      <td>win</td>\n",
       "      <td>checkmated</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/259200</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>r2r4/p2p1p1p/b6R/n1p1kp2/2P2P2/3BP3/PP5P/4K2R ...</td>\n",
       "      <td>[Event \"Enjoyable games 2 - Round 1\"]\\n[Site \"...</td>\n",
       "      <td>(d4, Nf6, c4, e6, Nc3, Bb4, Qb3, Bxc3+, Qxc3, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>koltcho69</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/koltcho69</td>\n",
       "      <td>1726</td>\n",
       "      <td>1577</td>\n",
       "      <td>win</td>\n",
       "      <td>resigned</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>8/5Q1k/4n1pp/8/7P/2N2b2/PP3P2/5K2 b - - 1 33</td>\n",
       "      <td>[Event \"Rapid Rats - Board 5\"]\\n[Site \"Chess.c...</td>\n",
       "      <td>(e4, e5, Nf3, Nc6, Bc4, Bc5, c3, a6, d4, exd4,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>enhmandah</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/enhmandah</td>\n",
       "      <td>1727</td>\n",
       "      <td>842</td>\n",
       "      <td>win</td>\n",
       "      <td>resigned</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>rn1q1b1r/kb2p1pp/2p5/p1Q5/N1BP2n1/4PN2/1P3PPP/...</td>\n",
       "      <td>[Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...</td>\n",
       "      <td>(d4, d5, e3, c6, c4, dxc4, Bxc4, b5, Bb3, a5, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>enhmandah</td>\n",
       "      <td>-Amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/enhmandah</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>819</td>\n",
       "      <td>1727</td>\n",
       "      <td>checkmated</td>\n",
       "      <td>win</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>r3kb1r/pp3ppp/3p1n2/2pKp3/P3P3/1P6/4qP1P/QNB5 ...</td>\n",
       "      <td>[Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...</td>\n",
       "      <td>(e4, c5, b3, Nc6, a4, d6, Bb5, Bd7, Qf3, Nd4, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-Amos-</td>\n",
       "      <td>Shalllow-Blue</td>\n",
       "      <td>https://api.chess.com/pub/player/-amos-</td>\n",
       "      <td>https://api.chess.com/pub/player/shalllow-blue</td>\n",
       "      <td>1729</td>\n",
       "      <td>1116</td>\n",
       "      <td>win</td>\n",
       "      <td>resigned</td>\n",
       "      <td>daily</td>\n",
       "      <td>1/172800</td>\n",
       "      <td>chess</td>\n",
       "      <td>True</td>\n",
       "      <td>r3b2r/pp6/2pPpR1k/4n3/2P3Q1/3B4/PP4PP/R5K1 b -...</td>\n",
       "      <td>[Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...</td>\n",
       "      <td>(d4, e6, c4, Qf6, Nf3, d6, Bg5, Qg6, Nc3, c6, ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  white_username black_username                                    white_id  \\\n",
       "0         -Amos-    miniman2804     https://api.chess.com/pub/player/-amos-   \n",
       "1         -Amos-      koltcho69     https://api.chess.com/pub/player/-amos-   \n",
       "2         -Amos-      enhmandah     https://api.chess.com/pub/player/-amos-   \n",
       "3      enhmandah         -Amos-  https://api.chess.com/pub/player/enhmandah   \n",
       "4         -Amos-  Shalllow-Blue     https://api.chess.com/pub/player/-amos-   \n",
       "\n",
       "                                         black_id  white_rating  black_rating  \\\n",
       "0    https://api.chess.com/pub/player/miniman2804          1708          1608   \n",
       "1      https://api.chess.com/pub/player/koltcho69          1726          1577   \n",
       "2      https://api.chess.com/pub/player/enhmandah          1727           842   \n",
       "3         https://api.chess.com/pub/player/-amos-           819          1727   \n",
       "4  https://api.chess.com/pub/player/shalllow-blue          1729          1116   \n",
       "\n",
       "  white_result black_result time_class time_control  rules  rated  \\\n",
       "0          win   checkmated      daily     1/259200  chess   True   \n",
       "1          win     resigned      daily     1/172800  chess   True   \n",
       "2          win     resigned      daily     1/172800  chess   True   \n",
       "3   checkmated          win      daily     1/172800  chess   True   \n",
       "4          win     resigned      daily     1/172800  chess   True   \n",
       "\n",
       "                                                 fen  \\\n",
       "0  r2r4/p2p1p1p/b6R/n1p1kp2/2P2P2/3BP3/PP5P/4K2R ...   \n",
       "1       8/5Q1k/4n1pp/8/7P/2N2b2/PP3P2/5K2 b - - 1 33   \n",
       "2  rn1q1b1r/kb2p1pp/2p5/p1Q5/N1BP2n1/4PN2/1P3PPP/...   \n",
       "3  r3kb1r/pp3ppp/3p1n2/2pKp3/P3P3/1P6/4qP1P/QNB5 ...   \n",
       "4  r3b2r/pp6/2pPpR1k/4n3/2P3Q1/3B4/PP4PP/R5K1 b -...   \n",
       "\n",
       "                                                 pgn  \\\n",
       "0  [Event \"Enjoyable games 2 - Round 1\"]\\n[Site \"...   \n",
       "1  [Event \"Rapid Rats - Board 5\"]\\n[Site \"Chess.c...   \n",
       "2  [Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...   \n",
       "3  [Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...   \n",
       "4  [Event \"CHESS BOARD CLASH - Round 1\"]\\n[Site \"...   \n",
       "\n",
       "                                            move_seq  \n",
       "0  (d4, Nf6, c4, e6, Nc3, Bb4, Qb3, Bxc3+, Qxc3, ...  \n",
       "1  (e4, e5, Nf3, Nc6, Bc4, Bc5, c3, a6, d4, exd4,...  \n",
       "2  (d4, d5, e3, c6, c4, dxc4, Bxc4, b5, Bb3, a5, ...  \n",
       "3  (e4, c5, b3, Nc6, a4, d6, Bb5, Bd7, Qf3, Nd4, ...  \n",
       "4  (d4, e6, c4, Qf6, Nf3, d6, Bg5, Qg6, Nc3, c6, ...  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7091a8e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:51.959497Z",
     "iopub.status.busy": "2024-09-30T01:41:51.958684Z",
     "iopub.status.idle": "2024-09-30T01:41:52.041430Z",
     "shell.execute_reply": "2024-09-30T01:41:52.040121Z"
    },
    "papermill": {
     "duration": 0.091627,
     "end_time": "2024-09-30T01:41:52.044034",
     "exception": false,
     "start_time": "2024-09-30T01:41:51.952407",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 66879 entries, 0 to 66878\n",
      "Data columns (total 15 columns):\n",
      " #   Column          Non-Null Count  Dtype \n",
      "---  ------          --------------  ----- \n",
      " 0   white_username  66879 non-null  object\n",
      " 1   black_username  66879 non-null  object\n",
      " 2   white_id        66879 non-null  object\n",
      " 3   black_id        66879 non-null  object\n",
      " 4   white_rating    66879 non-null  int64 \n",
      " 5   black_rating    66879 non-null  int64 \n",
      " 6   white_result    66879 non-null  object\n",
      " 7   black_result    66879 non-null  object\n",
      " 8   time_class      66879 non-null  object\n",
      " 9   time_control    66879 non-null  object\n",
      " 10  rules           66879 non-null  object\n",
      " 11  rated           66879 non-null  bool  \n",
      " 12  fen             66879 non-null  object\n",
      " 13  pgn             66879 non-null  object\n",
      " 14  move_seq        65270 non-null  object\n",
      "dtypes: bool(1), int64(2), object(12)\n",
      "memory usage: 7.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "80465129",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:52.057004Z",
     "iopub.status.busy": "2024-09-30T01:41:52.056222Z",
     "iopub.status.idle": "2024-09-30T01:41:53.749193Z",
     "shell.execute_reply": "2024-09-30T01:41:53.748115Z"
    },
    "papermill": {
     "duration": 1.7023,
     "end_time": "2024-09-30T01:41:53.751805",
     "exception": false,
     "start_time": "2024-09-30T01:41:52.049505",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.to_pickle('/kaggle/working/club_games_data.pkl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e62fc768",
   "metadata": {
    "papermill": {
     "duration": 0.004956,
     "end_time": "2024-09-30T01:41:53.762110",
     "exception": false,
     "start_time": "2024-09-30T01:41:53.757154",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bf513ac7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:53.775308Z",
     "iopub.status.busy": "2024-09-30T01:41:53.774916Z",
     "iopub.status.idle": "2024-09-30T01:41:53.833864Z",
     "shell.execute_reply": "2024-09-30T01:41:53.832781Z"
    },
    "papermill": {
     "duration": 0.069149,
     "end_time": "2024-09-30T01:41:53.836476",
     "exception": false,
     "start_time": "2024-09-30T01:41:53.767327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "white_username       0\n",
       "black_username       0\n",
       "white_id             0\n",
       "black_id             0\n",
       "white_rating         0\n",
       "black_rating         0\n",
       "white_result         0\n",
       "black_result         0\n",
       "time_class           0\n",
       "time_control         0\n",
       "rules                0\n",
       "rated                0\n",
       "fen                  0\n",
       "pgn                  0\n",
       "move_seq          1609\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28831e53",
   "metadata": {
    "papermill": {
     "duration": 0.005231,
     "end_time": "2024-09-30T01:41:53.847294",
     "exception": false,
     "start_time": "2024-09-30T01:41:53.842063",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Move Sequence\n",
    "\n",
    "We should see the expected set of first and second moves."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "47a4392f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:53.860415Z",
     "iopub.status.busy": "2024-09-30T01:41:53.859926Z",
     "iopub.status.idle": "2024-09-30T01:41:53.871215Z",
     "shell.execute_reply": "2024-09-30T01:41:53.869990Z"
    },
    "papermill": {
     "duration": 0.020824,
     "end_time": "2024-09-30T01:41:53.873479",
     "exception": false,
     "start_time": "2024-09-30T01:41:53.852655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['chess', 'chess960', 'threecheck', 'crazyhouse', 'kingofthehill'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['rules'].unique() # Check the different chess formats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f643e4db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:53.886720Z",
     "iopub.status.busy": "2024-09-30T01:41:53.885879Z",
     "iopub.status.idle": "2024-09-30T01:41:53.917454Z",
     "shell.execute_reply": "2024-09-30T01:41:53.916141Z"
    },
    "papermill": {
     "duration": 0.041102,
     "end_time": "2024-09-30T01:41:53.920177",
     "exception": false,
     "start_time": "2024-09-30T01:41:53.879075",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_classic = df[df['rules']=='chess'] # We will only train on the classic chess rules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1ff8ff1f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:53.933120Z",
     "iopub.status.busy": "2024-09-30T01:41:53.932656Z",
     "iopub.status.idle": "2024-09-30T01:41:53.995098Z",
     "shell.execute_reply": "2024-09-30T01:41:53.993795Z"
    },
    "papermill": {
     "duration": 0.071603,
     "end_time": "2024-09-30T01:41:53.997454",
     "exception": false,
     "start_time": "2024-09-30T01:41:53.925851",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 65778 entries, 0 to 66878\n",
      "Data columns (total 15 columns):\n",
      " #   Column          Non-Null Count  Dtype \n",
      "---  ------          --------------  ----- \n",
      " 0   white_username  65778 non-null  object\n",
      " 1   black_username  65778 non-null  object\n",
      " 2   white_id        65778 non-null  object\n",
      " 3   black_id        65778 non-null  object\n",
      " 4   white_rating    65778 non-null  int64 \n",
      " 5   black_rating    65778 non-null  int64 \n",
      " 6   white_result    65778 non-null  object\n",
      " 7   black_result    65778 non-null  object\n",
      " 8   time_class      65778 non-null  object\n",
      " 9   time_control    65778 non-null  object\n",
      " 10  rules           65778 non-null  object\n",
      " 11  rated           65778 non-null  bool  \n",
      " 12  fen             65778 non-null  object\n",
      " 13  pgn             65778 non-null  object\n",
      " 14  move_seq        65034 non-null  object\n",
      "dtypes: bool(1), int64(2), object(12)\n",
      "memory usage: 7.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df_classic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e562f2db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:54.010486Z",
     "iopub.status.busy": "2024-09-30T01:41:54.010073Z",
     "iopub.status.idle": "2024-09-30T01:41:54.292273Z",
     "shell.execute_reply": "2024-09-30T01:41:54.290757Z"
    },
    "papermill": {
     "duration": 0.291558,
     "end_time": "2024-09-30T01:41:54.294748",
     "exception": false,
     "start_time": "2024-09-30T01:41:54.003190",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{('Nc3',), ('d4',), ('e3',), ('a4',), ('c3',), ('Na3',), ('f4',), ('h3',), ('d3',), ('c4',), ('g4',), ('b4',), ('e4',), ('g3',), ('h4',), ('Nf3',), ('b3',), ('a3',), ('Nh3',), ('f3',)}\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "unique_seq_set = {seq for seq in df_classic['move_seq'] if seq is not None}\n",
    "first_moves = {seq[:1] for seq in unique_seq_set}\n",
    "print(first_moves)\n",
    "print(len(first_moves))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d0d8a977",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:54.308013Z",
     "iopub.status.busy": "2024-09-30T01:41:54.307575Z",
     "iopub.status.idle": "2024-09-30T01:41:54.436514Z",
     "shell.execute_reply": "2024-09-30T01:41:54.435418Z"
    },
    "papermill": {
     "duration": 0.138529,
     "end_time": "2024-09-30T01:41:54.439055",
     "exception": false,
     "start_time": "2024-09-30T01:41:54.300526",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{('b3', 'd5'), ('g3', 'Nc6'), ('d3', 'g6'), ('c4', 'g5'), ('e4', 'c5'), ('d4', 'f5'), ('d3', 'd6'), ('c3', 'd6'), ('Nh3', 'b6'), ('g4', 'Nc6'), ('Na3', 'Nc6'), ('g3', 'e5'), ('g3', 'c5'), ('b4', 'a5'), ('g3', 'h6'), ('d4', 'e6'), ('Nh3', 'b5'), ('h4', 'b6'), ('c4', 'e5'), ('g4', 'e5'), ('g4', 'c5'), ('Na3', 'c5'), ('e4', 'Nf6'), ('f4', 'Na6'), ('c4', 'h6'), ('b4', 'f5'), ('h3', 'd5'), ('a3', 'c6'), ('a4', 'd5'), ('b3', 'f6'), ('d4', 'Nc6'), ('f3', 'Nf6'), ('Nc3', 'd5'), ('Nf3', 'c6'), ('b4', 'e6'), ('f4', 'g5'), ('c4', 'a6'), ('Na3', 'Nf6'), ('h3', 'g6'), ('d4', 'e5'), ('b3', 'f5'), ('a4', 'g6'), ('c3', 'c5'), ('d4', 'h6'), ('Nh3', 'd5'), ('Nf3', 'a5'), ('e3',), ('g3', 'b6'), ('e4', 'b5'), ('a3', 'd6'), ('d4', 'a6'), ('b4', 'e5'), ('Nh3', 'g6'), ('d3', 'Nf6'), ('g4', 'b6'), ('c3', 'Nf6'), ('Nf3', 'd6'), ('f3', 'b5'), ('Nc3', 'f6'), ('e4', 'Nh6'), ('h4', 'a5'), ('e3', 'f6'), ('Nc3', 'f5'), ('h4', 'd6'), ('Nc3', 'Na6'), ('g4', 'Nh6'), ('e3', 'f5'), ('d4', 'b6'), ('e4', 'd5'), ('Nf3', 'Nc6'), ('h3', 'g5'), ('c4', 'c6'), ('g3', 'd5'), ('Nc3', 'g5'), ('e3', 'e6'), ('d3', 'b5'), ('b3', 'a6'), ('a3', 'c5'), ('e4', 'g6'), ('Nf3', 'c5'), ('g4', 'd5'), ('Na3', 'd5'), ('c4', 'h5'), ('b4', 'b6'), ('h4', 'Nc6'), ('g3', 'g6'), ('c4', 'a5'), ('g3', 'd6'), ('g4', 'g6'), ('h4', 'c5'), ('e3', 'e5'), ('e4',), ('c4', 'd6'), ('Nf3',), ('e3', 'h6'), ('c3', 'd5'), ('f3', 'f6'), ('a3',), ('Nc3', 'a6'), ('e4', 'Na6'), ('e3', 'a6'), ('f3', 'f5'), ('a3', 'b6'), ('c3', 'g6'), ('Nf3', 'b6'), ('d4', 'd6'), ('f4', 'f6'), ('e4', 'g5'), ('c4', 'Nc6'), ('f3', 'e6'), ('b3', 'c6'), ('Nf3', 'b5'), ('f4', 'f5'), ('c4', 'c5'), ('b3', 'h5'), ('e3', 'b6'), ('b4', 'd6'), ('h4', 'b5'), ('g3', 'Nf6'), ('f4', 'e6'), ('b3', 'a5'), ('d3', 'f5'), ('d3', 'Na6'), ('f3', 'e5'), ('g4', 'Nf6'), ('a3', 'd5'), ('d3', 'e6'), ('Nf3', 'd5'), ('d4', 'c5'), ('Nc3', 'c6'), ('b4', 'Nc6'), ('e3', 'c6'), ('a3', 'g6'), ('b3', 'e6'), ('f3', 'a6'), ('f4', 'e5'), ('Nf3', 'g6'), ('h4', 'd5'), ('f4', 'h6'), ('d4', 'Nf6'), ('g3', 'b5'), ('d3',), ('b4', 'c5'), ('c4', 'b6'), ('Nc3', 'a5'), ('e3', 'h5'), ('b3', 'Nc6'), ('e3', 'a5'), ('h4', 'g6'), ('f4', 'a6'), ('h3', 'f5'), ('h3', 'Na6'), ('b3', 'e5'), ('b4', 'Nf6'), ('Nh3', 'f6'), ('c4', 'Nh6'), ('e3', 'd6'), ('h3', 'e6'), ('a4', 'e6'), ('b3', 'h6'), ('Nc3', 'e6'), ('Nh3', 'f5'), ('d4', 'b5'), ('f4', 'b6'), ('c4', 'd5'), ('Nc3', 'Nc6'), ('Nh3', 'e6'), ('d4', 'Nh6'), ('Nf3', 'g5'), ('Nc3',), ('f3', 'c6'), ('h3', 'e5'), ('e3', 'Nc6'), ('a4', 'e5'), ('e4', 'h5'), ('b4', 'b5'), ('Nc3', 'e5'), ('h3', 'h6'), ('a3', 'Nf6'), ('c4', 'g6'), ('e4', 'a5'), ('Nc3', 'h6'), ('e4', 'f6'), ('Nf3', 'Nf6'), ('h4', 'g5'), ('e3', 'c5'), ('b3', 'b6'), ('d4', 'd5'), ('g3', 'f6'), ('h3', 'a6'), ('f4', 'c6'), ('Nh3', 'e5'), ('e4', 'f5'), ('Na3', 'a5'), ('g4', 'f6'), ('g3', 'f5'), ('f3', 'd6'), ('d4', 'g6'), ('d3', 'c6'), ('f4', 'h5'), ('f4',), ('e3', 'Nf6'), ('g3', 'Na6'), ('e4', 'e6'), ('b4', 'd5'), ('f4', 'a5'), ('g3', 'e6'), ('a3', 'b5'), ('g3', 'g5'), ('Nc3', 'b6'), ('d3', 'a5'), ('d4', 'f6'), ('g4', 'e6'), ('b4', 'g6'), ('f4', 'd6'), ('Nh3',), ('Na3', 'e6'), ('g4', 'g5'), ('f3', 'Nc6'), ('e4', 'e5'), ('c3', 'f5'), ('e3', 'b5'), ('e4', 'h6'), ('d4', 'Na6'), ('b4',), ('b3', 'g6'), ('f3', 'c5'), ('c4', 'Nf6'), ('h3', 'c6'), ('c3', 'e6'), ('e3', 'Nh6'), ('b3', 'd6'), ('a4', 'c6'), ('f4', 'Nc6'), ('Na3', 'e5'), ('e4', 'a6'), ('d4', 'g5'), ('a4',), ('g3', 'a6'), ('h3', 'h5'), ('d3', 'Nc6'), ('f4', 'c5'), ('h3', 'a5'), ('a4', 'a5'), ('c4',), ('e3', 'd5'), ('b4', 'g5'), ('d3', 'e5'), ('c3', 'e5'), ('d3', 'c5'), ('Nc3', 'g6'), ('b3',), ('e4', 'b6'), ('c4', 'b5'), ('a3', 'f6'), ('h3', 'd6'), ('d3', 'h6'), ('a4', 'd6'), ('h4',), ('f3',), ('f4', 'Nf6'), ('Nf3', 'f6'), ('Nc3', 'd6'), ('e3', 'g6'), ('c3',), ('f3', 'b6'), ('b3', 'c5'), ('h4', 'h5'), ('a3', 'f5'), ('Nf3', 'f5'), ('a3', 'e6'), ('g3',), ('f3', 'Nh6'), ('Nf3', 'e6'), ('h3', 'Nc6'), ('b3', 'Nf6'), ('e4', 'c6'), ('h4', 'f5'), ('d4',), ('g3', 'c6'), ('d3', 'b6'), ('h3', 'c5'), ('c3', 'b6'), ('a4', 'c5'), ('e3', 'Na6'), ('h4', 'e6'), ('Nc3', 'c5'), ('g4', 'c6'), ('Na3', 'c6'), ('g3', 'h5'), ('Nh3', 'Nc6'), ('f3', 'd5'), ('a3', 'e5'), ('g3', 'a5'), ('Nf3', 'e5'), ('e3', 'g5'), ('h3', 'Nf6'), ('Nf3', 'h6'), ('Nh3', 'c5'), ('e4', 'd6'), ('f3', 'g6'), ('Nc3', 'Nf6'), ('g4', 'a5'), ('c4', 'f6'), ('a3', 'a6'), ('f4', 'd5'), ('d4', 'c6'), ('h4', 'e5'), ('c3', 'c6'), ('Nf3', 'a6'), ('h4', 'h6'), ('g4', 'd6'), ('c4', 'f5'), ('Nh3', 'Nf6'), ('d3', 'd5'), ('d4', 'h5'), ('c4', 'Na6'), ('f4', 'g6'), ('h3', 'b6'), ('e4', 'Nc6'), ('a4', 'b6'), ('d4', 'a5'), ('b4', 'c6'), ('c4', 'e6')}\n",
      "324\n"
     ]
    }
   ],
   "source": [
    "unique_seq_set = {seq for seq in df_classic['move_seq'] if seq is not None}\n",
    "first_moves = {seq[:2] for seq in unique_seq_set}\n",
    "print(first_moves)\n",
    "print(len(first_moves))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f4d2d6b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-30T01:41:54.452184Z",
     "iopub.status.busy": "2024-09-30T01:41:54.451785Z",
     "iopub.status.idle": "2024-09-30T01:41:54.561291Z",
     "shell.execute_reply": "2024-09-30T01:41:54.559764Z"
    },
    "papermill": {
     "duration": 0.119122,
     "end_time": "2024-09-30T01:41:54.563963",
     "exception": false,
     "start_time": "2024-09-30T01:41:54.444841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 65034 valid move sequences.\n",
      "With 64398 unique mainlines.\n"
     ]
    }
   ],
   "source": [
    "unique_seq_set = {seq for seq in df_classic['move_seq'] if seq is not None}\n",
    "print(f\"There are {df_classic['move_seq'].count()} valid move sequences.\")\n",
    "print(f\"With {len(unique_seq_set)} unique mainlines.\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1488027,
     "sourceId": 2458363,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30775,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 475.946641,
   "end_time": "2024-09-30T01:41:55.292445",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-30T01:33:59.345804",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
